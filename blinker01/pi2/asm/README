
See the top level README for information on where to find the
schematic and programmers reference manual for the ARM processor
on the raspberry pi.  Also find information on how to load and run
these programs.

specifically for a forum question, self modifying code if you will,
writes instructions to ram then branches to that code.  in this case
essentially the same blinker01 example just some asm that is loaded
by the running program then branched to.

blinker.s is the ASM program that does the blinking and blinker01.c
just writes those instrucions to ram and executes them.  blinker.list
once assembled and dumped shows the list of instructions.  naturally
you have to start at an address that is aligned on a 32 bit boundary,
any address that has ram behind it not being used by the program
loading nor the gpu, should work.
